Обновленная структура проекта

server
├── app
│   ├── __init__.py
│   ├── main.py
│   ├── models
│   │   ├── __init__.py
│   │   ├── user.py
│   │   ├── room.py
│   │   ├── game.py
│   │   ├── transaction.py
│   ├── schemas
│   │   ├── __init__.py
│   │   ├── user.py
│   │   ├── room.py
│   │   ├── game.py
│   │   ├── transaction.py
│   ├── routers
│   │   ├── __init__.py
│   │   ├── auth.py
│   │   ├── users.py
│   │   ├── rooms.py
│   │   ├── games.py
│   │   ├── transactions.py
│   │   ├── websocket.py
│   ├── services
│   │   ├── __init__.py
│   │   ├── auth.py
│   │   ├── user.py
│   │   ├── room.py
│   │   ├── game.py
│   │   ├── transaction.py
│   ├── db.py
│   ├── game_logic.py
├── config
│   ├── __init__.py
│   ├── settings.py
├── requirements.txt
├── docker-compose.yml
├── Dockerfile
└── .env


Основные файлы с базовой функциональностью:
app/main.py - инициализация FastAPI и регистрация маршрутов.
app/models.py - модели данных.
app/schemas.py - схемы данных.
app/auth.py - аутентификация и авторизация.
app/websocket.py - обработка WebSocket соединений.
app/game_logic.py - логика игры.
app/db.py - подключение к базе данных.
config/settings.py - конфигурация приложения.
app/services/ - реализация бизнес-логики.
app/routers/ - обработка запросов.